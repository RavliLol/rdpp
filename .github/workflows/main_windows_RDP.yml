name: CL

on: [push, workflow_dispatch]

jobs:
  build:

    runs-on: windows-latest

    steps:
    - name: Download
      run: Invoke-WebRequest https://bin.equinox.io/c/bNyj1mQVY4c/ngrok-v3-stable-windows-amd64.zip -OutFile ngrok.zip
    - name: Extract
      run: Expand-Archive ngrok.zip
    - name: Auth
      run: .\ngrok\ngrok.exe authtoken $Env:NGROK_AUTH_TOKEN
      env:
        NGROK_AUTH_TOKEN: ${{ secrets.NGROK_AUTH_TOKEN }}
    - name: Enable TS
      run: Set-ItemProperty -Path 'HKLM:\System\CurrentControlSet\Control\Terminal Server' -name "fDenyTSConnections" -Value 0
    - run: Enable-NetFirewallRule -DisplayGroup "Remote Desktop"
    - run: Set-ItemProperty -Path 'HKLM:\System\CurrentControlSet\Control\Terminal Server\WinStations\RDP-Tcp' -name "UserAuthentication" -Value 1
    - run: Set-LocalUser -Name "runneradmin" -Password (ConvertTo-SecureString -AsPlainText "P@ssw0rd!" -Force)
    - name: Download softgpu ISO
      run: Invoke-WebRequest https://computernewb.com/isos/driver/virtio-win-0.1.240.iso -OutFile virtio.iso
    - name: Check ISO File Exists
      run: if (Test-Path -Path virtio.iso) { Write-Output "ISO file exists." } else { throw "ISO file not found." }
    - name: List Directory Contents
      run: Get-ChildItem -Path .
    - name: Unmount Previous ISO (if any)
      run: Dismount-DiskImage -ImagePath $PWD\virtio.iso || Write-Output "No previous ISO mounted."
    - name: Mount virtio ISO
      run: Mount-DiskImage -ImagePath $PWD\virtio.iso
    - name: List Mounted Disks
      run: Get-DiskImage -ImagePath $PWD\virtio.iso | Select-Object -Property DevicePath
    - name: Install virtio driver
      run: Start-Process "\\.\CDROM0\virtio-win-guest-tools.exe" -ArgumentList '/S' -NoNewWindow -Wait
    - name: Verify virtio Installation
      run: Get-Process | Select-String "virtio" | Format-Table -AutoSize
    - name: Create Tunnel
      run: .\ngrok\ngrok.exe tcp 3389

    # New steps for downloading and installing the virtual GPU driver
    
